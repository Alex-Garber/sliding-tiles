apply plugin: 'com.android.application'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

ext {
    appName = 'Sliding Tiles'
    appNameSlug = 'sliding-tiles'
    baseUrl = 'https://ddc-java.github.io'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"
    defaultConfig {

        applicationId "edu.cnm.deepdive.slidingtiles"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 5
        versionName "0.9.7"
        setProperty("archivesBaseName", appNameSlug)
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue "string", "app_name", appName
        resValue "string", "license_url", "${baseUrl}/${appNameSlug}/notice"
        resValue "string", "instructions_url", "${baseUrl}/${appNameSlug}/instructions"

    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Basic support dependencies
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Preference/settings dependencies
    implementation 'androidx.preference:preference:1.1.1'

    // Lifecycle (LiveData and ViewModel) dependencies
    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Fragment navigation dependencies
    implementation "androidx.navigation:navigation-fragment:$navigation_version"
    implementation "androidx.navigation:navigation-ui:$navigation_version"

    // Material Design component dependencies
    implementation 'com.google.android.material:material:1.2.1'

    // ReactiveX dependencies
    implementation 'io.reactivex.rxjava2:rxjava:2.2.20'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Room and SQLite dependencies
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    // Picasso (image loader) dependency
    implementation 'com.squareup.picasso:picasso:2.71828'

    // TODO Remove this dependency on completion.
    // Stetho (inspection) dependency
    implementation 'com.facebook.stetho:stetho:1.5.1'

    // Google Sign-In dependency
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // Test dependencies
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}

android.applicationVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        def docTitle = "${appName} ${project.android.defaultConfig.versionName}"
        def compileTask = variant.javaCompileProvider.get()
        def androidLibJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        title docTitle
        description "Generates Javadoc for $variant.name."
        source = compileTask.source
        destinationDir = file("${projectDir}/../docs/api")
        doFirst {
            classpath = files(compileTask.classpath.files) + files(androidLibJar)
        }
        options {
            links 'https://docs.oracle.com/javase/8/docs/api/'
            links 'http://reactivex.io/RxJava/javadoc/'
            links 'https://javadoc.io/doc/io.reactivex.rxjava2/rxandroid/latest/'
            links 'https://javadoc.io/doc/com.google.code.gson/gson/latest/'
            links 'https://square.github.io/retrofit/2.x/retrofit/'
            links 'https://square.github.io/okhttp/3.x/okhttp/'
            links 'https://square.github.io/okhttp/3.x/logging-interceptor/'
            links 'https://square.github.io/picasso/2.x/picasso/'
            links 'https://javadoc.io/doc/com.facebook.stetho/stetho/latest/'
            links 'https://commons.apache.org/proper/commons-csv/apidocs/'
            linksOffline 'https://developer.android.com/reference', "${projectDir}/../link-offline/android"
            linksOffline 'https://developers.google.com/android/reference', "${projectDir}/../link-offline/google"
            windowTitle docTitle
        }
    }
}
